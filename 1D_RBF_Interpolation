# -*- coding: utf-8 -*-
"""
Created on Mon Nov  7 13:18:00 2022

@author: Sungwoo Jung

Reference Website : https://www.youtube.com/watch?v=Kl9xk9BukNE
"""


import numpy as np
from scipy import interpolate
import matplotlib.pyplot as plt


### 1D RBF Interpolation

# Known data setting
xk = np.linspace(0,1,5)
yk = xk**2 - xk - np.cos(np.pi*xk)


## Step 1. Figure out wk

# Define the distance matrix
def eculidean_distance(x,xk):
    return np.sqrt( (x.reshape(-1,1) - xk.reshape(1,-1))**2 )

# Define the basis function
def basis_rbf(radius):
    return np.exp(-(2*radius)**2)

# Compute the matrix A
A = basis_rbf(eculidean_distance(xk,xk))

# Compute wk
wk = np.linalg.solve(A,yk)



## Step 2. Figure out yn
xn = np.linspace(0,1,100)

# Compute the matrix B
B = basis_rbf(eculidean_distance(xn,xk))

# Compute yn
yn = B@wk
